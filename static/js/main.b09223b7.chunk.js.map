{"version":3,"sources":["Keyboard.js","Data.js","Data2.js","Render.js","App.js","reportWebVitals.js","index.js"],"names":["Keyboard","props","state","style","backgroundColor","boxShadow","borderRadius","play","bind","handleKey","event","key","this","id","setState","height","marginTop","setTimeout","Audio","src","document","addEventListener","removeEventListener","className","onClick","React","Component","data","process","data2","Render","key1","alt","key2","App","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b09223b7.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nclass Keyboard extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            style: {\r\n            backgroundColor: 'crimson',\r\n            boxShadow: '3px 3px 5px black',\r\n            borderRadius: '3px'\r\n\r\n            }\r\n        }\r\n        this.play = this.play.bind(this);\r\n        this.handleKey = this.handleKey.bind(this);\r\n    }\r\n    //which key is pressed and whic music should be played\r\n   handleKey(event){\r\n       //select items which its id = event's key\r\n      if (event.key===this.props.id){\r\n          this.play();\r\n          //change state props\r\n          this.setState({\r\n              style:{\r\n                backgroundColor: 'orange',\r\n                boxShadow: '0 3px orange',\r\n                height: 77,\r\n                marginTop: 18,    \r\n              }\r\n          })\r\n          //after 500 milliseconds change state again\r\n          setTimeout(()=>(this.setState({\r\n            style:{\r\n                backgroundColor: 'crimson',\r\n            \r\n            boxShadow: '3px 3px 5px black'\r\n            },\r\n            \r\n        })), 500);   \r\n      }\r\n             \r\n   }\r\n  \r\n    play(event){\r\n        //create new audio object  and assaign it parametr as parent props value\r\n      const sound = new Audio(this.props.src);\r\n      sound.play();\r\n    }\r\n    //when component rendering , create event listener\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\",this.handleKey);\r\n    }\r\n    //when component destroyed from DOM remove eventlistener\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\",this.handleKey);\r\n    }\r\n\r\n    render(){\r\n        return( \r\n        <div className=\"keyboard\"  \r\n            style={this.state.style}\r\n             onClick={this.play}>\r\n            <h1>{this.props.id}</h1>\r\n\r\n        </div>     \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Keyboard","const data =[\r\n    {\r\n        id: 'q',\r\n        src: process.env.PUBLIC_URL +'/sounds/piano_middle_C.mp3'\r\n    },\r\n    \r\n    {\r\n        id: 'w',\r\n        src: process.env.PUBLIC_URL +'/sounds/W.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'e',\r\n        src: process.env.PUBLIC_URL +'/sounds/e.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'a',\r\n        src: process.env.PUBLIC_URL +'/sounds/a.mp3'\r\n    },\r\n    \r\n    {\r\n        id: 's',\r\n        src: process.env.PUBLIC_URL +'/sounds/s.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'd',\r\n        src: process.env.PUBLIC_URL +'/sounds/d.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'z',\r\n        src: process.env.PUBLIC_URL +'/sounds/z.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'x',\r\n        src: process.env.PUBLIC_URL +'/sounds/x.mp3'\r\n    },\r\n    \r\n    {\r\n        id: 'c',\r\n        src: process.env.PUBLIC_URL +'/sounds/c.wav'\r\n    },\r\n    \r\n    \r\n    ]\r\n    \r\n    export default data","const data2 =[\r\n    {\r\n        id: 'i',\r\n        src: process.env.PUBLIC_URL +'/sounds/i.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'o',\r\n        src:  process.env.PUBLIC_URL +'/sounds/o.mp3'\r\n    },\r\n    \r\n    {\r\n        id: 'p',\r\n        src: process.env.PUBLIC_URL +'/sounds/p.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'j',\r\n        src: process.env.PUBLIC_URL +'/sounds/j.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'k',\r\n        src:  process.env.PUBLIC_URL +'/sounds/k.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'l',\r\n        src: process.env.PUBLIC_URL +'/sounds/l.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'b',\r\n        src: process.env.PUBLIC_URL +'/sounds/b.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'n',\r\n        src:  process.env.PUBLIC_URL +'/sounds/n.wav'\r\n    },\r\n    \r\n    {\r\n        id: 'm',\r\n        src: process.env.PUBLIC_URL +'/sounds/m.wav'\r\n    },\r\n    \r\n    \r\n    ]\r\n    \r\n    export default data2","function Render (props){\r\n    return(\r\n        <div className=\"container-all\">\r\n    <div  className=\"container\">\r\n        <div className=\"keyboard-container1\">\r\n                    {props.key1}\r\n        </div>\r\n       \r\n        <div  className=\"image\">\r\n          <img src=\"https://j.gifs.com/yEGl9X.gif\" alt=\"equalizer\"/>\r\n         \r\n        </div>\r\n       \r\n        <div className=\"keyboard-container1\">\r\n        {props.key2}\r\n        </div>\r\n        \r\n    </div>\r\n    <h1 className=\"hidden-message\">Sorry, This application is not intended for mobile phones &#128533;</h1>\r\n    <div id=\"logo\">\r\n    <i  className=\"fas fa-3x fa-music\"></i><h1>Music maker</h1><i  className=\"fas fa-3x fa-music\"></i>\r\n    </div>\r\n    <h1 className=\"hidden-message\"> Created by Abdurrahim</h1>\r\n    \r\n</div>\r\n    )\r\n}\r\nexport default Render","\nimport Keyboard from \"./Keyboard\";\nimport data from \"./Data\";\nimport data2 from \"./Data2\";\nimport Render from \"./Render\";\nimport \"./App.css\"\n\nfunction App(){\n  //read all objects from data (first keyboard's data) and send to child component's prop\n  const key1 = data.map((item)=>{\n      return <Keyboard id={item.id} key={item.id}  src={item.src}/>\n  });\n  //read all objects from data2 (second keyboard's data) and send to child component's prop\n  const key2 = data2.map((item)=>{\n    return <Keyboard id={item.id} key={item.id}  src={item.src}/>\n\n});\n    return (\n    \n    <Render key1={key1} key2={key2}/>\n\n    )\n  }\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}